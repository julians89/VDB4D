# Usage:
#
# To build the images:
#   docker compose build
#
# To start up a specific service by name:
#   docker compose up <service_name>
#
# To open an interactive shell to a running container:
#   docker exec -it <container_name> bash

services:
  # Base image containing dependencies.
  base:
    image: ros2:base
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ROS_DISTRO: ${ROS_DISTRO:?}
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    privileged: True
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority

  # Overlay image containing the example source code.
  overlay:
    extends: base
    image: ros2:overlay
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: overlay

  # Developer container
  dev:
    extends: overlay
    image: ros2:dev
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}
    volumes:
      # Mount the source code
      - ./lidar_compression:/overlay_ws/src/lidar_compression:rw
      # Mount colcon build artifacts for faster rebuilds
      - ./.colcon/build/:/overlay_ws/build/:rw
      - ./.colcon/install/:/overlay_ws/install/:rw
      - ./.colcon/log/:/overlay_ws/log/:rw
    user: ${USERNAME:-devuser}
    command: sleep infinity

  # Behavior demo using Python and py_trees
  #demo-behavior-py:
  #  extends: overlay
  #  command: >
  #    ros2 launch tb_autonomy tb_demo_behavior_py.launch.py
  #    tree_type:=${BT_TYPE:?}
  #    enable_vision:=${ENABLE_VISION:?}
  #    target_color:=${TARGET_COLOR:?}